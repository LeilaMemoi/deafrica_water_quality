services:
  db:
    image: kartoza/postgis:latest
    volumes:
      - postgis-data:/var/lib/postgresql
    ports:
        - ${POSTGRES_PORT}:5432
    environment:
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASS=${POSTGRES_PASS}
        - ALLOW_IP_RANGE=${ALLOW_IP_RANGE}
        - POSTGRES_MULTIPLE_EXTENSIONS=${POSTGRES_MULTIPLE_EXTENSIONS}
        - FORCE_SSL=TRUE
    restart: on-failure
    healthcheck:
      test: "pg_isready -h 127.0.0.1 -U ${POSTGRES_USER}"
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 1m

  jupyter:
    build:
      context: .
      dockerfile: docker/Dockerfile
    environment:
      - DB_HOSTNAME=db
      - DB_DATABASE=opendatacube
      - DB_PASSWORD=${POSTGRES_PASS}
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PORT=5432
      - GS_NO_SIGN_REQUEST=YES
      - AWS_NO_SIGN_REQUEST=YES
      - AWS_DEFAULT_REGION=af-south-1
    depends_on:
        db:
          condition: service_healthy
    ports:
      - ${JUPYTER_PORT}:9988
    volumes:
      - .:/home/jovyan/
    restart: always

  explorer:
    image: opendatacube/explorer:latest
    environment:
    # - DB_HOSTNAME=host.docker.internal
    - POSTGRES_HOSTNAME=db
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASS}
    - POSTGRES_DB=opendatacube
    - POSTGRES_PORT=5432
    - ODC_DEFAULT_INDEX_DRIVER=postgres
    - ODC_POSTGIS_INDEX_DRIVER=postgis
    - ODC_DEFAULT_DB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASS}@db:5432/opendatacube
    - ODC_POSTGIS_DB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASS}@db:5432/opendatacube
    - FLASK_ENV=development
    - FLASK_APP=cubedash
    - FLASK_DEBUG=1
    - CUBEDASH_DEFAULT_TIMEZONE=${CUBEDASH_DEFAULT_TIMEZONE}
    # - VIRTUAL_HOST=datacube.explorer
    depends_on:
      - db
    ports:
      - ${EXPLORER_PORT}:8080

volumes:
  postgis-data: